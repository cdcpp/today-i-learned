# 2025-07-10 TIL

## 학습 내용 (Learning Source)

-   김영한님의 **'스프링 입문'** 수강 (섹션 7. 스프링 데이터 JPA)


## 핵심 정리: JPA , SpringData Jpa

### 1. 구현 클래스가 사라진다

-   **원리:** `JpaRepository` 인터페이스를 상속받으면, 스프링이 시작될 때 자동으로 그 인터페이스에 대한 **'프록시(Proxy) 구현체'를 생성**하여 스프링 빈으로 등록해준다.
-   **결과:** 개발자는 `save()`, `findById()`, `findAll()` 같은 기본적인 CRUD 쿼리를 단 한 줄도 작성할 필요가 없다. 인터페이스만 선언하면 끝이다.

### 2. 비즈니스 로직에만 집중하라

-   순수 JDBC 시절에는 DB 커넥션, 리소스 반납 등 수많은 '반복 작업'이 , 마이바티스와 같은 템플릿에선... 쿼리를 작성해야한다.
-   스프링 데이터 JPA를 사용함으로써, 개발자는 이제 데이터를 어떻게 저장하고 가져올지에 대한 고민에서 해방됨.
-   가장 중요한 '서비스 계층'의 비즈니스 로직을 설계하는 데에만 모든 에너지를 집중할 수 있게 되었고, 이런게 JPA가 이전 방식(Jdbc , Jdbc템플릿)보다 간결하고, 빠른 장점이 있다는 것을 보여준다.

## 오늘의 교훈

> 좋은 기술은 개발자를 '단순 반복 작업'으로부터 해방시킨다. 스프링 데이터 JPA는, 개발자가 더 높은 차원의 문제 해결, 즉 '비즈니스 로직'에만 집중할 수 있도록 만드는 강력한 도구다.